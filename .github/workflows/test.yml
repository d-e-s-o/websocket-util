# Copyright (C) 2022-2024 Daniel Mueller <deso@posteo.net>
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  pull_request:
  push:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Build without debug information enabled to decrease compilation time
  # and binary sizes in CI. This option is assumed to only have marginal
  # effects on the generated code, likely only in terms of section
  # arrangement. See
  # https://doc.rust-lang.org/cargo/reference/environment-variables.html
  # https://doc.rust-lang.org/rustc/codegen-options/index.html#debuginfo
  RUSTFLAGS: '-C debuginfo=0'

jobs:
  build:
    name: Build [${{ matrix.rust }}, ${{ matrix.profile }}, ${{ matrix.args }}]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        profile: [dev, release]
        args: [--all-targets --all-features]
        include:
        - rust: stable
          profile: release
          args:
        - rust: stable
          profile: dev
          args: --features=test
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Build ${{ matrix.profile }}
      run: cargo build --profile=${{ matrix.profile }} ${{ matrix.args }}
  build-minimum:
    name: Build using minimum versions of dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nightly Rust
        uses: dtolnay/rust-toolchain@nightly
      - run: cargo +nightly -Z minimal-versions update
      - name: Install minimum Rust
        uses: dtolnay/rust-toolchain@master
        with:
          # Please adjust README and rust-version field in Cargo.toml files when
          # bumping version.
          toolchain: 1.63.0
      - name: Build
        run: cargo build --locked --all-features
  test:
    name: Test and coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: Test and gather coverage
      run: cargo llvm-cov --all-targets --lcov --output-path lcov.info --ignore-filename-regex=/dev/null -- --include-ignored
    - name: Upload code coverage results
      uses: codecov/codecov-action@v3
      with:
        files: lcov.info
  clippy:
    name: Lint with clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo clippy --no-deps --all-targets --all-features -- -A unknown_lints -D warnings
  cargo-doc:
    name: Generate documentation
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: '-A unknown_lints -D warnings'
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: |
          cargo doc --no-deps
          # Explicitly run doc tests as cargo-llvm-cov currently does not.
          cargo test --doc
